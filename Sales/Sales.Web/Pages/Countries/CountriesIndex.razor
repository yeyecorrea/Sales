@page "/countries"
@* Inyectamos el IRepository *@
@inject IRepository repository

<h3>Paises</h3>

@* Invocamos el componente creado *@

<GenericList MyList="Countries">
    @* Se pueden enviar data a los otros componentes no obligatorios *@
    <Loading>

    </Loading>
    <Body>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>País</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var country in Countries!)
                {
                    <tr>
                        <td>
                            <a class="btn btn-warning">Editar</a>
                            <button class="btn btn-danger">Borrar</button>
                        </td>
                        <td>
                            @country.Name
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </Body>
</GenericList>

@code {
    @* Creamso la propiedad para pasar la lista al a vista *@
    public List<Country>? Countries { get; set; }

    @* Se sobre escribe el metodo OnInitializedAsync que es como el OnInit en angular  *@
    protected override async Task OnInitializedAsync()
    {
        @* Obtenemos la lsita de paises,´por medio de repositori el objecto inyectado y le pasamos la url *@
        var responseHttp = await repository.Get<List<Country>>("/api/countries");

        @* Llenamos las lista con la respuesta *@
        Countries = responseHttp.Response;
    }
}
